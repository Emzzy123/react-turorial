{"version":3,"sources":["Table.js","Form.js","App.js","Api.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"gOAIMA,EAAc,WAClB,OACE,gCACA,+BACK,sCACA,2CAKHC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACA,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACA,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJSA,MASb,OAAO,gCAAQJ,KAkBFS,EAfD,SAACV,GAAW,IACjBE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBAEpB,OACC,kCACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCahDE,E,4MA7CZC,aAAc,CACZN,KAAM,GACNC,IAAI,I,EAENM,MAAQ,EAAKD,a,EAEdE,aAAe,SAACC,GAAW,IAAD,EACJA,EAAMC,OAArBV,EADmB,EACnBA,KAAMW,EADa,EACbA,MAEb,EAAKC,SAAL,eACGZ,EAAOW,K,EAIPE,WAAa,WACZ,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGvB,WAAU,IAAD,EACeS,KAAKR,MAAnBP,EADD,EACCA,KAAMC,EADP,EACOA,IACd,OACI,iCACE,uBAAOe,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eACjB,uBAAOQ,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eACf,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GAtC3CO,aCiCJC,E,4MA9Bbd,MAAQ,CACNe,WAAY,I,EAEXnB,gBAAkB,SAACJ,GAAU,IACpBuB,EAAc,EAAKf,MAAnBe,WAEP,EAAKV,SAAS,CACZU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM1B,Q,EAIpBe,aAAe,SAACU,GACd,EAAKZ,SAAS,CACZU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,4CAI7C,WAAS,IACEF,EAAeP,KAAKR,MAApBe,WACT,OACE,sBAAKI,UAAU,YAAf,UACG,cAAC,EAAD,CAAO9B,cAAe0B,EAAYnB,gBAAiBY,KAAKZ,kBAD3D,IAEI,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GAxBjBM,aCFCA,YCKnBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.52a32a5d.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\n//Functional Component\r\n\r\nconst TableHeader = () =>{\r\n  return(\r\n    <thead>\r\n    <tr>\r\n         <th>Name</th>\r\n         <th>Job</th>\r\n    </tr>\r\n    </thead>\r\n  )\r\n}\r\nconst TableBody = (props) => {\r\n  const rows = props.characterData.map((row, index) => {\r\n    return(\r\n      <tr key={index}>\r\n      <td>{row.name}</td>\r\n      <td>{row.job}</td>\r\n      <td>\r\n      <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n      </td>\r\n      </tr>\r\n    )\r\n  })\r\n  return <tbody>{rows}</tbody>\r\n}\r\n\r\nconst Table = (props) => {\r\n  const {characterData, removeCharacter} = props\r\n\r\n    return (\r\n     <table>\r\n     <TableHeader />\r\n     <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n     </table>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Table\r\n","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n   initialState ={\r\n     name: '',\r\n     job:'',\r\n   }\r\n   state = this.initialState\r\n\r\n  handleChange = (event) => {\r\n  const {name, value} = event.target\r\n\r\n  this.setState({\r\n    [name]: value,\r\n  })\r\n}\r\n\r\n     submitForm = () => {\r\n      this.props.handleSubmit(this.state)\r\n      this.setState(this.initialState)\r\n    }\r\n\r\n  render() {\r\n    const { name, job } = this.state;\r\n    return (\r\n        <form>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange} />\r\n          <label htmlFor=\"job\">Job</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"job\"\r\n            id=\"job\"\r\n            value={job}\r\n            onChange={this.handleChange} />\r\n            <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n        </form>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Form;\r\n","import React, {Component} from 'react'\r\nimport Table from './Table';\r\nimport Form from './Form'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    characters :[],\r\n  }\r\n     removeCharacter = (index) =>{\r\n       const {characters} = this.state\r\n\r\n       this.setState({\r\n         characters: characters.filter((character, i) => {\r\n           return i !== index\r\n         }),\r\n       })\r\n     }\r\n    handleSubmit = (character) => {\r\n      this.setState({\r\n        characters: [...this.state.characters, character]\r\n      })\r\n    }\r\n\r\n  render(){\r\n     const { characters } = this.state;\r\n    return(\r\n      <div className=\"container\">\r\n         <Table characterData={characters} removeCharacter={this.removeCharacter} /> {/*Passing a props*/}\r\n          <Form handleSubmit={this.handleSubmit} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App\r\n","import React, {Component} from 'react'\r\n\r\nclass App1 extends Component {\r\n  state = {\r\n    data: [],\r\n  }\r\n\r\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\r\n  componentDidMount() {\r\n    const url =\r\n      'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*'\r\n\r\n    fetch(url)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          data: result,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const {data} = this.state\r\n\r\n    const result = data.map((entry, index) => {\r\n      return <li key={index}>{entry}</li>\r\n    })\r\n\r\n    return <ul>{result}</ul>\r\n  }\r\n}\r\n\r\nexport default App1\r\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Table from './Table';\nimport App1 from './Api';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}